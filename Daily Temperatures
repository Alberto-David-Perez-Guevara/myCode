
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* dailyTemperatures(int* T, int TSize, int* returnSize){

  int idx;
  int size;
  int pos;
  int *stack;
  int *ans;
    
  if((T == NULL) || (TSize < 1)) {
    if (returnSize != NULL) returnSize = 0;
    return NULL;
  }
    
  if (returnSize == NULL) return NULL;

  size  = TSize - 1;
    
  stack = (int *) malloc (sizeof(int)*TSize);
  ans   = (int *) malloc (sizeof(int)*TSize);
  memset(stack, -1 , sizeof(int)*TSize);
  memset(ans  ,  0 , sizeof(int)*TSize);
  pos  = 0;
    
  //put the last element in the stack as initial condition
  stack[pos++] = size;
    
  for (idx = size-1; idx >= 0 ; idx--) {
    // push idx into the stack; 
    stack[pos++] = idx;
      
    // compare vs previous element in stack
    while ((pos > 0) && (T[idx] >= T[stack[pos-1]])) {
      stack[pos-1]  = 0;
      pos--;
    }
      
    if (pos < 0) pos = 0;
    stack[pos++] = idx;
    ans[idx]  = (pos-2 < 0)? 0: stack[pos-2]-idx;
  } 
    
  *returnSize = TSize;
  return ans;
}
