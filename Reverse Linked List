/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

/********recursive solution***********
// START

struct ListNode* start;
void reverse (struct ListNode* Node) {
    
    struct ListNode *curr;
    curr = Node;
    
    if (Node == NULL) {
        return;
    }
    
    if (Node->next == NULL) {
        start  = Node;
        return;
    }
    
    reverse (Node->next);
    
    curr->next->next = curr;
    curr->next       = NULL;
}

struct ListNode* reverseList(struct ListNode* head) {
  start = NULL;       
  if (head != NULL) {
     reverse (head);
  }
  return start;
}

// END
************************************************/

/***************Iterative solution*****************
// START

struct ListNode* reverseList(struct ListNode* head) {
  
  struct ListNode *current;
  struct ListNode *previous;
    
  current  = head;
  previous = NULL;
    
  while (current != NULL) {
    struct ListNode *temp; 
    temp           = current->next;
    current->next  = previous;
    previous       = current;
    current        = temp;
  }
    
  return previous;
}

// END
***************Iterative solution*******************/
