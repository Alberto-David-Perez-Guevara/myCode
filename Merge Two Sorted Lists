/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2){

  bool            addNode;
  struct ListNode *node;
  struct ListNode *head;
    
  // check input parameters
  if ((l1 == NULL) && (l2 == NULL)) return NULL;
      
  head       = malloc(sizeof(struct ListNode)); 
  head->val  = 0;
  head->next = NULL;
    
  node       = head;
  addNode    = false;
    
  while ((l1 != NULL) || (l2 != NULL)) {
      
    if ((l1 != NULL) && ((l2 == NULL) || (l1->val <= l2->val))) {
      node->val  = l1->val;
      l1         = l1->next;
      addNode    = true;
    }
      
    if ((l2 != NULL) && ((l1 == NULL) || (l2->val <= l1->val))) {
      if (addNode) {
        node->next = malloc(sizeof(struct ListNode));
        node       = node->next;
        node->val  = -1;
        node->next = NULL;
      }
      node->val  = l2->val;
      l2         = l2->next;
    }
    
    // check if we need to add one node for the next pass
    if ((l2 != NULL) || (l1 != NULL)) {
      node->next = malloc(sizeof(struct ListNode));
      node       = node->next;
      node->val  = -1;
      node->next = NULL;
      addNode    = false;
    }
  }

  return head;
}
