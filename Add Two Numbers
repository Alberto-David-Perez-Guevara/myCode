/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2){
  int             a;   
  int             b;   
  int             carry;       
  struct ListNode *sum;   
  struct ListNode *head;  
    
  // variable initialization 
  a         = 0; 
  b         = 0;
  carry     = 0;
  sum       = (struct ListNode*) malloc (sizeof(struct ListNode));
  sum->val  = 0;
  sum->next = NULL;
  head      = sum;
    
  do {  
   
    a         = (l1 != NULL) ?  l1->val : 0;
    b         = (l2 != NULL) ?  l2->val : 0;  
    sum->val  = (a + b + carry)%10;
    carry     = (a + b + carry)/10;
    
    if (((l1 != NULL) && (l1->next != NULL))||((l2 != NULL) && (l2->next != NULL)) || (carry)) {
        
      sum->next = (struct ListNode*) malloc (sizeof(struct ListNode));
      sum       = sum->next; 
      sum->val  = 0;
      sum->next = NULL;            
    }    
    
    if (l1 != NULL) l1  = l1->next;
    if (l2 != NULL) l2  = l2->next;   
      
  } while ((l1 != NULL) || (l2 != NULL) || (carry));
    
  return head;
}
